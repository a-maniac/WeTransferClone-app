{"ast":null,"code":"var _jsxFileName = \"C:\\\\we-transfer-clone\\\\app\\\\src\\\\dropzone\\\\Dropzone.js\";\nimport React, { Component } from 'react';\nimport dropIcon from \"../dropIcon.svg\";\nimport './Dropzone.css';\nexport default class Dropzone extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hightlight: false\n    };\n    this.fileInputRef = React.createRef();\n    this.openFileDialog = this.openFileDialog.bind(this);\n    this.onFilesAdded = this.onFilesAdded.bind(this);\n    this.onDragOver = this.onDragOver.bind(this);\n    this.onDragLeave = this.onDragLeave.bind(this);\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  openFileDialog() {\n    if (this.props.disabled) return;\n    this.fileInputRef.current.click();\n  }\n\n  onFilesAdded(evt) {\n    if (this.props.disabled) return;\n    const files = evt.target.files;\n\n    if (this.props.onFilesAdded) {\n      const array = this.fileListToArray(files);\n      this.props.onFilesAdded(array);\n    }\n  }\n\n  fileListToArray(list) {\n    const array = [];\n\n    for (var i = 0; i < list.length; i++) {\n      array.push(list.item(i));\n    }\n\n    return array;\n  }\n\n  onDragOver(evt) {\n    evt.preventDefault();\n    if (this.props.disabled) return;\n    this.setState({\n      hightlight: true\n    });\n  }\n\n  onDragLeave() {\n    this.setState({\n      hightlight: false\n    });\n  }\n\n  onDrop(event) {\n    event.preventDefault();\n    if (this.props.disabled) return;\n    const files = event.dataTransfer.files;\n\n    if (this.props.onFilesAdded) {\n      const array = this.fileListToArray(files);\n      this.props.onFilesAdded(array);\n    }\n\n    this.setState({\n      hightlight: false\n    });\n  }\n\n  render() {\n    const {\n      selectedFolder\n    } = this.state;\n    const inputFolder = React.createElement(\"input\", {\n      directory: \"\",\n      webkitdirectory: \"\",\n      ref: this.fileInputRef,\n      className: \"FileInput\",\n      type: \"file\",\n      multiple: true,\n      onChange: this.onFilesAdded,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      directory: \"\",\n      webkitdirectory: \"\",\n      ref: this.fileInputRef,\n      className: \"FileInput\",\n      type: \"file\",\n      multiple: true,\n      onChange: this.onFilesAdded,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:/we-transfer-clone/app/src/dropzone/Dropzone.js"],"names":["React","Component","Dropzone","constructor","props","state","hightlight","fileInputRef","createRef","openFileDialog","bind","onFilesAdded","onDragOver","onDragLeave","onDrop","disabled","current","click","evt","files","target","array","fileListToArray","list","i","length","push","item","preventDefault","setState","event","dataTransfer","render","selectedFolder","inputFolder"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport dropIcon from '../dropIcon.svg';\r\nimport './Dropzone.css';\r\n\r\nexport default class Dropzone extends Component {\r\n\r\n  constructor(props) {\r\n\r\n    super(props);\r\n\r\n    this.state = { \r\n      hightlight: false\r\n     };\r\n    this.fileInputRef = React.createRef();\r\n\r\n    this.openFileDialog = this.openFileDialog.bind(this);\r\n    this.onFilesAdded = this.onFilesAdded.bind(this);\r\n    this.onDragOver = this.onDragOver.bind(this);\r\n    this.onDragLeave = this.onDragLeave.bind(this);\r\n    this.onDrop = this.onDrop.bind(this);\r\n\r\n  }\r\n\r\n  openFileDialog() {\r\n    if (this.props.disabled) return;\r\n    this.fileInputRef.current.click();\r\n  }\r\n\r\n  onFilesAdded(evt) {\r\n    if (this.props.disabled) return;\r\n    const files = evt.target.files;\r\n    if (this.props.onFilesAdded) {\r\n      const array = this.fileListToArray(files);\r\n      this.props.onFilesAdded(array);\r\n    }\r\n  }\r\n\r\n  fileListToArray(list) {\r\n    const array = [];\r\n    for (var i = 0; i < list.length; i++) {\r\n      array.push(list.item(i));\r\n    }\r\n    return array;\r\n  }\r\n\r\n  onDragOver(evt) {\r\n    evt.preventDefault();\r\n  \r\n    if (this.props.disabled) return;\r\n  \r\n    this.setState({ hightlight: true });\r\n  }\r\n\r\n  onDragLeave() {\r\n    this.setState({ hightlight: false });\r\n  }\r\n\r\n  onDrop(event) {\r\n    event.preventDefault();\r\n  \r\n    if (this.props.disabled) return;\r\n  \r\n    const files = event.dataTransfer.files;\r\n    if (this.props.onFilesAdded) {\r\n      const array = this.fileListToArray(files);\r\n      this.props.onFilesAdded(array);\r\n    }\r\n    this.setState({ hightlight: false });\r\n  }\r\n\r\n  render() {\r\n\r\n    const {selectedFolder} = this.state;\r\n\r\n    const inputFolder = (<input \r\n    directory=\"\" \r\n    webkitdirectory=\"\" \r\n    ref={this.fileInputRef}\r\n      className=\"FileInput\"\r\n      type=\"file\"\r\n      multiple\r\n      onChange={this.onFilesAdded}\r\n    />)\r\n\r\n    return (\r\n     <div>\r\n       \r\n        <div>\r\n          <button >\r\n          <input \r\n            directory=\"\" \r\n            webkitdirectory=\"\" \r\n            ref={this.fileInputRef}\r\n              className=\"FileInput\"\r\n              type=\"file\"\r\n              multiple\r\n              onChange={this.onFilesAdded}\r\n          />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}