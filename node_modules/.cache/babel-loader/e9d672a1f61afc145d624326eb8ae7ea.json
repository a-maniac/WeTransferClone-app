{"ast":null,"code":"import _curry2 from './internal/_curry2';\nimport _isInteger from './internal/_isInteger';\nimport assoc from './assoc';\nimport dissoc from './dissoc';\nimport remove from './remove';\nimport update from './update';\n/**\n * Makes a shallow clone of an object, omitting the property at the given path.\n * Note that this copies and flattens prototype properties onto the new object\n * as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.11.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {k: v} -> {k: v}\n * @param {Array} path The path to the value to omit\n * @param {Object} obj The object to clone\n * @return {Object} A new object without the property at path\n * @see R.assocPath\n * @example\n *\n *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n */\n\nvar dissocPath = /*#__PURE__*/_curry2(function dissocPath(path, obj) {\n  switch (path.length) {\n    case 0:\n      return obj;\n\n    case 1:\n      return _isInteger(path[0]) ? remove(path[0], 1, obj) : dissoc(path[0], obj);\n\n    default:\n      var head = path[0];\n      var tail = Array.prototype.slice.call(path, 1);\n\n      if (obj[head] == null) {\n        return obj;\n      } else if (_isInteger(path[0])) {\n        return update(head, dissocPath(tail, obj[head]), obj);\n      } else {\n        return assoc(head, dissocPath(tail, obj[head]), obj);\n      }\n\n  }\n});\n\nexport default dissocPath;","map":{"version":3,"sources":["C:/we-transfer-clone/app/node_modules/ramda/es/dissocPath.js"],"names":["_curry2","_isInteger","assoc","dissoc","remove","update","dissocPath","path","obj","length","head","tail","Array","prototype","slice","call"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,oBAApB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA;;;;;;;;;;;;;;;;;;;;AAmBA,IAAIC,UAAU,GAAG,aAAaN,OAAO,CAAC,SAASM,UAAT,CAAoBC,IAApB,EAA0BC,GAA1B,EAA+B;AACnE,UAAQD,IAAI,CAACE,MAAb;AACE,SAAK,CAAL;AACE,aAAOD,GAAP;;AACF,SAAK,CAAL;AACE,aAAOP,UAAU,CAACM,IAAI,CAAC,CAAD,CAAL,CAAV,GAAsBH,MAAM,CAACG,IAAI,CAAC,CAAD,CAAL,EAAU,CAAV,EAAaC,GAAb,CAA5B,GAAgDL,MAAM,CAACI,IAAI,CAAC,CAAD,CAAL,EAAUC,GAAV,CAA7D;;AACF;AACE,UAAIE,IAAI,GAAGH,IAAI,CAAC,CAAD,CAAf;AACA,UAAII,IAAI,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BR,IAA3B,EAAiC,CAAjC,CAAX;;AACA,UAAIC,GAAG,CAACE,IAAD,CAAH,IAAa,IAAjB,EAAuB;AACrB,eAAOF,GAAP;AACD,OAFD,MAEO,IAAIP,UAAU,CAACM,IAAI,CAAC,CAAD,CAAL,CAAd,EAAyB;AAC9B,eAAOF,MAAM,CAACK,IAAD,EAAOJ,UAAU,CAACK,IAAD,EAAOH,GAAG,CAACE,IAAD,CAAV,CAAjB,EAAoCF,GAApC,CAAb;AACD,OAFM,MAEA;AACL,eAAON,KAAK,CAACQ,IAAD,EAAOJ,UAAU,CAACK,IAAD,EAAOH,GAAG,CAACE,IAAD,CAAV,CAAjB,EAAoCF,GAApC,CAAZ;AACD;;AAdL;AAgBD,CAjBoC,CAArC;;AAkBA,eAAeF,UAAf","sourcesContent":["import _curry2 from './internal/_curry2';\nimport _isInteger from './internal/_isInteger';\nimport assoc from './assoc';\nimport dissoc from './dissoc';\nimport remove from './remove';\nimport update from './update';\n\n/**\n * Makes a shallow clone of an object, omitting the property at the given path.\n * Note that this copies and flattens prototype properties onto the new object\n * as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.11.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {k: v} -> {k: v}\n * @param {Array} path The path to the value to omit\n * @param {Object} obj The object to clone\n * @return {Object} A new object without the property at path\n * @see R.assocPath\n * @example\n *\n *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n */\nvar dissocPath = /*#__PURE__*/_curry2(function dissocPath(path, obj) {\n  switch (path.length) {\n    case 0:\n      return obj;\n    case 1:\n      return _isInteger(path[0]) ? remove(path[0], 1, obj) : dissoc(path[0], obj);\n    default:\n      var head = path[0];\n      var tail = Array.prototype.slice.call(path, 1);\n      if (obj[head] == null) {\n        return obj;\n      } else if (_isInteger(path[0])) {\n        return update(head, dissocPath(tail, obj[head]), obj);\n      } else {\n        return assoc(head, dissocPath(tail, obj[head]), obj);\n      }\n  }\n});\nexport default dissocPath;"]},"metadata":{},"sourceType":"module"}