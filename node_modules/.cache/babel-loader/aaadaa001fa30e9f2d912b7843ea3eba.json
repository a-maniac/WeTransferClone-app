{"ast":null,"code":"var _jsxFileName = \"C:\\\\we-transfer-clone\\\\app\\\\src\\\\components\\\\HomeForm.js\";\nimport React, { Component } from 'react';\nexport default class HomeForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this._isEmail = emailAddress => {\n      const emailRegex = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n      return emailRegex.test(emailAddress);\n    };\n\n    this._checkForm = (fields = []) => {\n      let {\n        form,\n        errors\n      } = this.state;\n      const validations = {\n        to: [{\n          errorMessage: \"To is required !\",\n          isValid: () => {\n            return form.to.length;\n          }\n        }, {\n          errorMessage: \"Email is not valid\",\n          isValid: () => {\n            return this._isEmail(form.to);\n          }\n        }],\n        from: [{\n          errorMessage: \"From is required !\",\n          isValid: () => {\n            return form.from.length;\n          }\n        }, {\n          errorMessage: \"Email is not valid\",\n          isValid: () => {\n            return this._isEmail(form.from);\n          }\n        }]\n      };\n\n      _.each(fields, field => {\n        let fieldValidations = _.get(validations, field, []); //validations[field]\n\n\n        errors[field] = null;\n\n        _.each(fieldValidations, fieldValidation => {\n          console.log(fieldValidation);\n        });\n      });\n    };\n\n    this._onTextChange = event => {\n      let {\n        form\n      } = this.state;\n      const fieldName = event.target.name;\n      const fieldValue = event.target.value;\n      form[fieldName] = fieldValue;\n      this.setState({\n        form: form\n      });\n    };\n\n    this._onSubmit = event => {\n      event.preventDefault();\n\n      this._checkForm(['from', 'to']);\n\n      console.log(this.state.form);\n    };\n\n    this.state = {\n      form: {\n        to: '',\n        from: '',\n        message: ''\n      },\n      errors: {\n        to: null,\n        from: null,\n        message: null\n      }\n    };\n    this._onTextChange = this._onTextChange.bind(this);\n    this._onSubmit = this._onSubmit.bind(this);\n    this._checkForm = this._checkForm.bind(this);\n  }\n\n  render() {\n    const {\n      form\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"app-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this._onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"app-card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"app-card-header-inner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"app-file-select-zone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"input-file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"input-file\",\n      type: \"file\",\n      multiple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"app-upload-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"app-upload-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Drag and Drop your Files Here\"))))), React.createElement(\"div\", {\n      className: \"app-card-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"app-card-content-inner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"app-form-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"to\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Send To\"), React.createElement(\"input\", {\n      name: \"to\",\n      value: form.to,\n      onChange: this._onTextChange,\n      type: \"text\",\n      placeholder: \"Email Address\",\n      id: \"to\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"app-form-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"from\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"From\"), React.createElement(\"input\", {\n      name: \"from\",\n      value: form.from,\n      onChange: this._onTextChange,\n      type: \"text\",\n      placeholder: \"Your Email Address\",\n      id: \"from\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"app-form-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Message\"), React.createElement(\"textarea\", {\n      id: \"message\",\n      value: form.message,\n      onChange: this._onTextChange,\n      placeholder: \"Add a note (optional)\",\n      name: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"app-form-actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"app-button primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Send\"))))));\n  }\n\n}","map":{"version":3,"sources":["C:/we-transfer-clone/app/src/components/HomeForm.js"],"names":["React","Component","HomeForm","constructor","props","_isEmail","emailAddress","emailRegex","test","_checkForm","fields","form","errors","state","validations","to","errorMessage","isValid","length","from","_","each","field","fieldValidations","get","fieldValidation","console","log","_onTextChange","event","fieldName","target","name","fieldValue","value","setState","_onSubmit","preventDefault","message","bind","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class HomeForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             form : {\r\n                 to : '',\r\n                 from : '',\r\n                 message : ''\r\n             },\r\n\r\n             errors : {\r\n                 to : null,\r\n                 from : null,\r\n                 message : null\r\n             }\r\n        }\r\n\r\n        this._onTextChange = this._onTextChange.bind(this);\r\n        this._onSubmit = this._onSubmit.bind(this);\r\n        this._checkForm = this._checkForm.bind(this);\r\n    }\r\n\r\n    _isEmail = (emailAddress) => {\r\n        const emailRegex = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\r\n        \r\n        return emailRegex.test(emailAddress);\r\n    }\r\n\r\n    _checkForm = (fields = []) => {\r\n\r\n        let {form, errors} = this.state;\r\n\r\n        const validations = {\r\n\r\n            to : [\r\n                {\r\n                    errorMessage : \"To is required !\",\r\n                    isValid : () => {\r\n                        return form.to.length;\r\n                    }\r\n                },\r\n\r\n                {\r\n                    errorMessage : \"Email is not valid\",\r\n                    isValid : () => {\r\n                        return this._isEmail(form.to);\r\n                    }\r\n                }\r\n            ],\r\n\r\n            from : [\r\n                {\r\n                    errorMessage : \"From is required !\",\r\n                    isValid : () => {\r\n                        return form.from.length;\r\n                    }\r\n                },\r\n\r\n                {\r\n                    errorMessage : \"Email is not valid\",\r\n                    isValid : () => {\r\n                        return this._isEmail(form.from);\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n\r\n        _.each(fields, field => {\r\n\r\n            let fieldValidations = _.get(validations, field, []); //validations[field]\r\n\r\n            errors[field] = null;\r\n\r\n            _.each(fieldValidations, fieldValidation => {\r\n                console.log(fieldValidation);\r\n            })\r\n        })\r\n    }\r\n    \r\n    _onTextChange = (event) => {\r\n\r\n        let {form} = this.state;\r\n        const fieldName = event.target.name;\r\n        const fieldValue = event.target.value;\r\n\r\n        form[fieldName] = fieldValue;\r\n        this.setState({\r\n            form : form\r\n        })\r\n    }\r\n\r\n    _onSubmit = (event) => {\r\n        event.preventDefault();\r\n        this._checkForm(['from', 'to']);\r\n        console.log(this.state.form);\r\n    }\r\n\r\n    render() {\r\n\r\n        const {form} = this.state;\r\n\r\n        return (\r\n            \r\n            <div className=\"app-card\">\r\n                <form onSubmit={this._onSubmit}>\r\n                    <div className=\"app-card-header\">\r\n                        <div className=\"app-card-header-inner\">\r\n                            <div className=\"app-file-select-zone\">\r\n                                <label htmlFor='input-file'>\r\n                                    <input id='input-file' type=\"file\" multiple={true} />\r\n                                    <span className=\"app-upload-icon\"/>\r\n                                    <span className=\"app-upload-description\">\r\n                                        Drag and Drop your Files Here\r\n                                    </span>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"app-card-content\">\r\n                        <div className=\"app-card-content-inner\">\r\n                            <div className=\"app-form-item\">\r\n                                <label htmlFor=\"to\">Send To</label>\r\n                                <input name=\"to\" value={form.to} onChange={this._onTextChange} type=\"text\" placeholder=\"Email Address\" id=\"to\" /> \r\n                            </div>\r\n\r\n                            <div className=\"app-form-item\">\r\n                                <label htmlFor=\"from\">From</label>\r\n                                <input name=\"from\" value={form.from} onChange={this._onTextChange} type=\"text\" placeholder=\"Your Email Address\" id=\"from\" /> \r\n                            </div>\r\n\r\n                            <div className=\"app-form-item\">\r\n                                <label htmlFor=\"message\">Message</label>\r\n                                <textarea id=\"message\" value={form.message} onChange={this._onTextChange} placeholder=\"Add a note (optional)\" name=\"message\" />\r\n                            </div>\r\n\r\n                            <div className=\"app-form-actions\">\r\n                                <button className=\"app-button primary\" type=\"submit\">Send</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n          \r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}