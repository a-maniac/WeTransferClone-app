{"ast":null,"code":"var _jsxFileName = \"C:\\\\we-transfer-clone\\\\app\\\\src\\\\components\\\\SearchFilterCountry.js\";\nimport React, { Component } from 'react';\nimport countries from '../helpers/countries';\nexport default class SearchFilterCountry extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onTextChanged = e => {\n      const {\n        items\n      } = this.state;\n      const value = e.target.value;\n      let suggestions = [];\n\n      if (value.length > 0) {\n        const regex = new RegExp(`^${value}`, 'i');\n        suggestions = items.sort().filter(v => regex.test(v));\n      }\n\n      this.setState(() => ({\n        suggestions\n      }));\n    };\n\n    this.state = {\n      suggestions: [],\n      items: countries\n    };\n    this.renderSuggestions = this.renderSuggestions.bind(this);\n  }\n\n  renderSuggestions() {\n    const {\n      suggestions\n    } = this.state;\n\n    if (suggestions.length === 0) {\n      return null;\n    }\n\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, this.suggestions.map(item => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, item.name)));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.onTextChanged,\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), this.renderSuggestions());\n  }\n\n}","map":{"version":3,"sources":["C:/we-transfer-clone/app/src/components/SearchFilterCountry.js"],"names":["React","Component","countries","SearchFilterCountry","constructor","props","onTextChanged","e","items","state","value","target","suggestions","length","regex","RegExp","sort","filter","v","test","setState","renderSuggestions","bind","map","item","name","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AAEA,eAAe,MAAMC,mBAAN,SAAkCF,SAAlC,CAA4C;AAEzDG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,aAXmB,GAWFC,CAAD,IAAO;AAErB,YAAM;AAACC,QAAAA;AAAD,UAAU,KAAKC,KAArB;AAEA,YAAMC,KAAK,GAAGH,CAAC,CAACI,MAAF,CAASD,KAAvB;AACA,UAAIE,WAAW,GAAG,EAAlB;;AACA,UAAGF,KAAK,CAACG,MAAN,GAAe,CAAlB,EAAqB;AACnB,cAAMC,KAAK,GAAG,IAAIC,MAAJ,CAAY,IAAGL,KAAM,EAArB,EAAwB,GAAxB,CAAd;AACAE,QAAAA,WAAW,GAAGJ,KAAK,CAACQ,IAAN,GAAaC,MAAb,CAAoBC,CAAC,IAAIJ,KAAK,CAACK,IAAN,CAAWD,CAAX,CAAzB,CAAd;AACD;;AACC,WAAKE,QAAL,CAAc,OAAO;AAACR,QAAAA;AAAD,OAAP,CAAd;AACH,KAtBkB;;AAGjB,SAAKH,KAAL,GAAa;AACVG,MAAAA,WAAW,EAAG,EADJ;AAEVJ,MAAAA,KAAK,EAAGN;AAFE,KAAb;AAKA,SAAKmB,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACD;;AAeDD,EAAAA,iBAAiB,GAAI;AACnB,UAAM;AAACT,MAAAA;AAAD,QAAgB,KAAKH,KAA3B;;AACA,QAAGG,WAAW,CAACC,MAAZ,KAAuB,CAA1B,EAA6B;AAC3B,aAAO,IAAP;AACD;;AACC,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKD,WAAL,CAAiBW,GAAjB,CAAuBC,IAAD,IAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAI,CAACC,IAAV,CAAhC,CADH,CADF;AAKH;;AAEDC,EAAAA,MAAM,GAAG;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,QAAQ,EAAE,KAAKpB,aAAtB;AAAqC,MAAA,IAAI,EAAC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEK,KAAKe,iBAAL,EAFL,CADF;AAMD;;AA9CwD","sourcesContent":["import React, { Component } from 'react';\r\nimport countries from '../helpers/countries';\r\n\r\nexport default class SearchFilterCountry extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       suggestions : [],\r\n       items : countries\r\n    }\r\n\r\n    this.renderSuggestions = this.renderSuggestions.bind(this);\r\n  }\r\n  \r\n  onTextChanged = (e) => {\r\n\r\n    const {items} = this.state;\r\n    \r\n    const value = e.target.value;\r\n    let suggestions = [];\r\n    if(value.length > 0) {\r\n      const regex = new RegExp(`^${value}`, 'i');\r\n      suggestions = items.sort().filter(v => regex.test(v));\r\n    }\r\n      this.setState(() => ({suggestions}));\r\n  }\r\n\r\n  renderSuggestions () {\r\n    const {suggestions} = this.state;\r\n    if(suggestions.length === 0) {\r\n      return null;\r\n    }\r\n      return (\r\n        <ul>\r\n          {this.suggestions.map( (item) => <li>{item.name}</li>) }\r\n        </ul> \r\n      );\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n          <input onChange={this.onTextChanged} type='text' />\r\n          {this.renderSuggestions()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}