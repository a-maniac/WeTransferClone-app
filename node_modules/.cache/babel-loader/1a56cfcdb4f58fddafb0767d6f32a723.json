{"ast":null,"code":"var _jsxFileName = \"C:\\\\we-transfer-clone\\\\app\\\\src\\\\components\\\\LoginForm.js\";\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport _ from 'lodash';\nexport default class LoginForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onTextFieldChange = e => {\n      let {\n        user\n      } = this.state;\n      const fieldName = e.target.name;\n      const fieldValue = e.target.value;\n      user[fieldName] = fieldValue;\n      this.setState({\n        user: user\n      });\n    };\n\n    this.onSubmit = event => {\n      event.preventDefault();\n      const fieldNeedToValidate = ['email'];\n      this.formValidation(fieldNeedToValidate, isValid => {\n        console.log('form Validated ' ? isValid : null);\n      });\n    };\n\n    this.state = {\n      user: {\n        email: \"\",\n        password: \"\"\n      },\n      error: {\n        email: null,\n        password: null\n      }\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onTextFieldChange = this.onTextFieldChange.bind(this);\n    this.formValidation = this.formValidation.bind(this);\n  }\n\n  formValidation(fieldsToValidate = [], callback = () => {}) {\n    const {\n      user\n    } = this.state;\n    const allFields = [{\n      email: {\n        message: \"Your Email is required\",\n        func: () => {\n          const value = _.get(user, 'email', \"\");\n\n          console.log('value : ', value);\n\n          if (value) {\n            return true;\n          }\n\n          return false;\n        }\n      }\n    }];\n    let errors = this.state.errors;\n\n    _.each(fieldsToValidate, field => {\n      const fieldValidate = _.get(allFields, field);\n\n      if (fieldValidate) {\n        console.log('fieldValidate');\n        errors[field] = null;\n        const isFieldValid = fieldValidate.func();\n\n        if (!isFieldValid) {\n          errors[field] = _.get(fieldValidate, 'message');\n        }\n      }\n    });\n\n    console.log('after process of validation form errors', errors);\n    const isValid = true;\n    callback(isValid);\n  }\n\n  render() {\n    const {\n      user,\n      error\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"app-login-form-inner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"form-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Sign In\"), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classNames('app-form-item', {\n        'error': _.get(error, 'email')\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"email-id\",\n      value: user.email,\n      onChange: this.onTextFieldChange,\n      type: \"email\",\n      placeholder: \"Enter your Email\",\n      name: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: classNames('app-form-item', {\n        'error': _.get(error, 'password')\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"password-id\",\n      value: user.password,\n      onChange: this.onTextFieldChange,\n      type: \"password\",\n      placeholder: \"Enter your Password\",\n      name: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"app-form-actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"app-button primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Login\"))), React.createElement(\"div\", {\n      className: \"app-form-forgotten-pass\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Forgot Password ?\")), React.createElement(\"div\", {\n      className: \"app-form-forgotten-pass\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => {\n        if (this.props.onShow) {\n          this.props.onShow('subscribe');\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"SIGN UP\")));\n  }\n\n}","map":{"version":3,"sources":["C:/we-transfer-clone/app/src/components/LoginForm.js"],"names":["React","Component","classNames","_","LoginForm","constructor","props","onTextFieldChange","e","user","state","fieldName","target","name","fieldValue","value","setState","onSubmit","event","preventDefault","fieldNeedToValidate","formValidation","isValid","console","log","email","password","error","bind","fieldsToValidate","callback","allFields","message","func","get","errors","each","field","fieldValidate","isFieldValid","render","onShow"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash';\r\n\r\nexport default class LoginForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            user : {\r\n                email : \"\",\r\n                password : \"\"\r\n            },\r\n            error : {\r\n                email : null,\r\n                password : null\r\n            }\r\n        }\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onTextFieldChange = this.onTextFieldChange.bind(this);\r\n        this.formValidation = this.formValidation.bind(this);\r\n    }\r\n\r\n    onTextFieldChange = (e) => {\r\n\r\n        let {user} = this.state;\r\n\r\n        const fieldName = e.target.name;\r\n        const fieldValue = e.target.value;\r\n\r\n        user[fieldName] = fieldValue;\r\n\r\n        this.setState({\r\n            user : user\r\n        })\r\n\r\n    }\r\n\r\n    formValidation (fieldsToValidate = [], callback = () => {}) {\r\n\r\n        const {user} = this.state;\r\n\r\n        const allFields = [\r\n\r\n            {\r\n                email :  {\r\n                    message : \"Your Email is required\",\r\n                    func : () => {\r\n                        const value = _.get(user, 'email', \"\");\r\n                        console.log('value : ', value);\r\n                        if(value) {\r\n                            return true;\r\n                        }\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n\r\n        ];\r\n\r\n        let errors = this.state.errors;\r\n\r\n        _.each(fieldsToValidate, (field) => {\r\n\r\n            const fieldValidate = _.get(allFields, field);\r\n\r\n            if(fieldValidate) {\r\n\r\n                console.log('fieldValidate');\r\n\r\n                errors[field] = null;\r\n\r\n                const isFieldValid = fieldValidate.func();\r\n                \r\n                if(!isFieldValid) {\r\n                    errors[field] = _.get(fieldValidate, 'message');\r\n                }\r\n\r\n            }\r\n\r\n        })\r\n\r\n        console.log('after process of validation form errors', errors);\r\n\r\n        const isValid = true;\r\n\r\n        callback(isValid);\r\n\r\n    }\r\n\r\n\r\n    onSubmit = (event) => {\r\n\r\n            event.preventDefault();\r\n\r\n            const fieldNeedToValidate = ['email']\r\n            this.formValidation(fieldNeedToValidate, (isValid) => {\r\n\r\n                console.log('form Validated ' ? isValid : null);\r\n\r\n            })\r\n\r\n            \r\n\r\n    }\r\n    \r\n\r\n    render() {\r\n\r\n        const {user, error} = this.state;\r\n\r\n        return (\r\n        \r\n                <div className=\"app-login-form-inner\">\r\n                    <h2 className=\"form-title\">Sign In</h2>\r\n                    \r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className={classNames('app-form-item', {'error' : _.get(error, 'email')})}>\r\n                            <input id=\"email-id\" value={user.email} onChange={this.onTextFieldChange} type=\"email\" placeholder=\"Enter your Email\" name=\"email\" />\r\n                        </div>\r\n                        <div className={classNames('app-form-item', {'error' : _.get(error, 'password')})}>\r\n                            <input id=\"password-id\" value={user.password} onChange={this.onTextFieldChange} type=\"password\" placeholder=\"Enter your Password\" name=\"password\" />\r\n                        </div>\r\n                        <div className=\"app-form-actions\">\r\n                            <button className=\"app-button primary\">Login</button>\r\n                            \r\n                        </div>\r\n                    </form>\r\n                    <div className=\"app-form-forgotten-pass\">\r\n                                <a href=\"\">Forgot Password ?</a>\r\n                            </div>\r\n                            <div className=\"app-form-forgotten-pass\">\r\n                                <button onClick={() => {\r\n                                    if(this.props.onShow) {\r\n                                        this.props.onShow('subscribe');\r\n                                    }\r\n                                }} >SIGN UP</button>\r\n                            </div>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}