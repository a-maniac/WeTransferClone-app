{"ast":null,"code":"var _jsxFileName = \"C:\\\\we-transfer-clone\\\\app\\\\src\\\\components\\\\SearchFilterCountry.js\";\n\n/* eslint-disable no-use-before-define */\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { sizing } from '@material-ui/system';\nimport countries from '../helpers/countries'; // ISO 3166-1 alpha-2\n// ⚠️ No support for IE 11\n\nfunction countryToFlag(isoCode) {\n  return typeof String.fromCodePoint !== 'undefined' ? isoCode.toUpperCase().replace(/./g, char => String.fromCodePoint(char.charCodeAt(0) + 127397)) : isoCode;\n}\n\nconst useStyles = makeStyles({\n  option: {\n    fontSize: 15,\n    '& > span': {\n      marginRight: 10,\n      fontSize: 18\n    }\n  }\n});\nexport default function SearchFilterCountry() {\n  const classes = useStyles();\n  return React.createElement(Autocomplete, {\n    id: \"size-small-standard\",\n    style: {\n      size: \"small\"\n    },\n    options: countries,\n    classes: {\n      option: classes.option\n    },\n    autoHighlight: true,\n    getOptionLabel: option => option.label,\n    renderOption: option => React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, countryToFlag(option.code)), option.label, \" (\", option.code, \") +\", option.phone),\n    renderInput: params => React.createElement(TextField, Object.assign({}, params, {\n      label: \"Choose a country\",\n      variant: \"outlined\",\n      inputProps: { ...params.inputProps,\n        autoComplete: 'new-password' // disable autocomplete and autofill\n\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["C:/we-transfer-clone/app/src/components/SearchFilterCountry.js"],"names":["React","TextField","Autocomplete","makeStyles","sizing","countries","countryToFlag","isoCode","String","fromCodePoint","toUpperCase","replace","char","charCodeAt","useStyles","option","fontSize","marginRight","SearchFilterCountry","classes","size","label","code","phone","params","inputProps","autoComplete"],"mappings":";;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAOC,SAAP,MAAsB,sBAAtB,C,CAEA;AACA;;AACA,SAASC,aAAT,CAAuBC,OAAvB,EAAgC;AAC9B,SAAO,OAAOC,MAAM,CAACC,aAAd,KAAgC,WAAhC,GACHF,OAAO,CAACG,WAAR,GAAsBC,OAAtB,CAA8B,IAA9B,EAAoCC,IAAI,IAAIJ,MAAM,CAACC,aAAP,CAAqBG,IAAI,CAACC,UAAL,CAAgB,CAAhB,IAAqB,MAA1C,CAA5C,CADG,GAEHN,OAFJ;AAGD;;AAED,MAAMO,SAAS,GAAGX,UAAU,CAAC;AAC3BY,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE,EADJ;AAEN,gBAAY;AACVC,MAAAA,WAAW,EAAE,EADH;AAEVD,MAAAA,QAAQ,EAAE;AAFA;AAFN;AADmB,CAAD,CAA5B;AAUA,eAAe,SAASE,mBAAT,GAA+B;AAC5C,QAAMC,OAAO,GAAGL,SAAS,EAAzB;AAEA,SACE,oBAAC,YAAD;AACE,IAAA,EAAE,EAAC,qBADL;AAEE,IAAA,KAAK,EAAE;AAAEM,MAAAA,IAAI,EAAG;AAAT,KAFT;AAGE,IAAA,OAAO,EAAEf,SAHX;AAIE,IAAA,OAAO,EAAE;AACPU,MAAAA,MAAM,EAAEI,OAAO,CAACJ;AADT,KAJX;AAOE,IAAA,aAAa,MAPf;AAQE,IAAA,cAAc,EAAEA,MAAM,IAAIA,MAAM,CAACM,KARnC;AASE,IAAA,YAAY,EAAEN,MAAM,IAClB,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOT,aAAa,CAACS,MAAM,CAACO,IAAR,CAApB,CADF,EAEGP,MAAM,CAACM,KAFV,QAEmBN,MAAM,CAACO,IAF1B,SAEmCP,MAAM,CAACQ,KAF1C,CAVJ;AAeE,IAAA,WAAW,EAAEC,MAAM,IACjB,oBAAC,SAAD,oBACMA,MADN;AAEE,MAAA,KAAK,EAAC,kBAFR;AAGE,MAAA,OAAO,EAAC,UAHV;AAIE,MAAA,UAAU,EAAE,EACV,GAAGA,MAAM,CAACC,UADA;AAEVC,QAAAA,YAAY,EAAE,cAFJ,CAEoB;;AAFpB,OAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AA6BD","sourcesContent":["\r\n/* eslint-disable no-use-before-define */\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { sizing } from '@material-ui/system';\r\nimport countries from '../helpers/countries';\r\n\r\n// ISO 3166-1 alpha-2\r\n// ⚠️ No support for IE 11\r\nfunction countryToFlag(isoCode) {\r\n  return typeof String.fromCodePoint !== 'undefined'\r\n    ? isoCode.toUpperCase().replace(/./g, char => String.fromCodePoint(char.charCodeAt(0) + 127397))\r\n    : isoCode;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  option: {\r\n    fontSize: 15,\r\n    '& > span': {\r\n      marginRight: 10,\r\n      fontSize: 18,\r\n    },\r\n  },\r\n});\r\n\r\nexport default function SearchFilterCountry() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Autocomplete\r\n      id=\"size-small-standard\"\r\n      style={{ size : \"small\" }}\r\n      options={countries}\r\n      classes={{\r\n        option: classes.option,\r\n      }}\r\n      autoHighlight\r\n      getOptionLabel={option => option.label}\r\n      renderOption={option => (\r\n        <React.Fragment>\r\n          <span>{countryToFlag(option.code)}</span>\r\n          {option.label} ({option.code}) +{option.phone}\r\n        </React.Fragment>\r\n      )}\r\n      renderInput={params => (\r\n        <TextField\r\n          {...params}\r\n          label=\"Choose a country\"\r\n          variant=\"outlined\"\r\n          inputProps={{\r\n            ...params.inputProps,\r\n            autoComplete: 'new-password', // disable autocomplete and autofill\r\n          }}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}