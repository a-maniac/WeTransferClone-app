{"ast":null,"code":"var _jsxFileName = \"C:\\\\we-transfer-clone\\\\app\\\\src\\\\components\\\\FormPayment.js\";\nimport React, { Component } from 'react';\nimport { CardElement, injectStripe, ReactStripeElements } from 'react-stripe-elements';\nimport { sendPaymentInfos } from '../helpers/PaymentInfos';\n\nclass FormPayment extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onTextFieldChange = e => {\n      let {\n        fields\n      } = this.state;\n      const fieldName = e.target.name;\n      const fieldValue = e.target.value;\n      fields[fieldName] = fieldValue;\n      this.setState({\n        fields: fields\n      });\n    };\n\n    this.onSubmit = async event => {\n      event.preventDefault();\n      const name = this.state.fields;\n      console.log(\"name : \", name);\n      const cardElement = this.props.elements.getElement('card');\n      /*\r\n      try {\r\n        this.props.stripe\r\n      .createPaymentMethod({\r\n                          type: 'card',\r\n                          card: cardElement,\r\n                      }).then(({paymentMethod}) => {\r\n      console.log('Received Stripe PaymentMethod:', paymentMethod);\r\n      });\r\n      let {token} = await this.props.stripe.createToken({type: 'card', name: name});\r\n      let amount = this.props.amount;\r\n      \r\n      sendPaymentInfos(token, amount);\r\n        }catch(err) {\r\n          throw err;\r\n      }\r\n      */\n    };\n\n    this.state = {\n      fields: {\n        name: \"\"\n      }\n    };\n    this.onTextFieldChange = this.onTextFieldChange.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"app-form-payment-component\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"name\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"credit-card-name\",\n      value: this.state.name,\n      onChange: this.onTextFieldChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"CC Number -- Exp. Date -- CVC\"), React.createElement(CardElement, {\n      className: \"card-element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Charge it !\")));\n  }\n\n}\n\nexport default injectStripe(FormPayment);","map":{"version":3,"sources":["C:/we-transfer-clone/app/src/components/FormPayment.js"],"names":["React","Component","CardElement","injectStripe","ReactStripeElements","sendPaymentInfos","FormPayment","constructor","props","onTextFieldChange","e","fields","state","fieldName","target","name","fieldValue","value","setState","onSubmit","event","preventDefault","console","log","cardElement","elements","getElement","bind","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,WAAR,EAAqBC,YAArB,EAAmCC,mBAAnC,QAA6D,uBAA7D;AACA,SAAQC,gBAAR,QAA+B,yBAA/B;;AAEA,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAEhCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAYnBC,iBAZmB,GAYEC,CAAD,IAAO;AAEvB,UAAI;AAACC,QAAAA;AAAD,UAAW,KAAKC,KAApB;AAEA,YAAMC,SAAS,GAAGH,CAAC,CAACI,MAAF,CAASC,IAA3B;AACA,YAAMC,UAAU,GAAGN,CAAC,CAACI,MAAF,CAASG,KAA5B;AAEAN,MAAAA,MAAM,CAACE,SAAD,CAAN,GAAoBG,UAApB;AAEA,WAAKE,QAAL,CAAc;AACVP,QAAAA,MAAM,EAAGA;AADC,OAAd;AAIH,KAzBkB;;AAAA,SA2BnBQ,QA3BmB,GA2BR,MAAOC,KAAP,IAAiB;AAExBA,MAAAA,KAAK,CAACC,cAAN;AAEA,YAAMN,IAAI,GAAG,KAAKH,KAAL,CAAWD,MAAxB;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBR,IAAvB;AACA,YAAMS,WAAW,GAAG,KAAKhB,KAAL,CAAWiB,QAAX,CAAoBC,UAApB,CAA+B,MAA/B,CAApB;AACA;;;;;;;;;;;;;;;;;AAsBH,KAxDkB;;AAGf,SAAKd,KAAL,GAAa;AACTD,MAAAA,MAAM,EAAG;AACLI,QAAAA,IAAI,EAAG;AADF;AADA,KAAb;AAMA,SAAKN,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBkB,IAAvB,CAA4B,IAA5B,CAAzB;AACH;;AAiDDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,QAAQ,EAAE,KAAKT,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAEA;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,kBAA7B;AAAgD,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWG,IAAlE;AAAyE,MAAA,QAAQ,EAAE,KAAKN,iBAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADA,EAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADA,EAEA,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CANA,EAWA;AAAQ,MAAA,SAAS,EAAC,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAXA,CADJ,CADJ;AAkBH;;AAhF+B;;AAoFpC,eAAeN,YAAY,CAACG,WAAD,CAA3B","sourcesContent":["import React, { Component } from 'react';\r\nimport {CardElement, injectStripe, ReactStripeElements} from 'react-stripe-elements';\r\nimport {sendPaymentInfos} from '../helpers/PaymentInfos';\r\n\r\nclass FormPayment extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            fields : {\r\n                name : \"\"\r\n        }\r\n        }\r\n    \r\n        this.onTextFieldChange = this.onTextFieldChange.bind(this);\r\n    }\r\n    \r\n    onTextFieldChange = (e) => {\r\n\r\n        let {fields} = this.state;\r\n\r\n        const fieldName = e.target.name;\r\n        const fieldValue = e.target.value;\r\n\r\n        fields[fieldName] = fieldValue;\r\n\r\n        this.setState({\r\n            fields : fields\r\n        })\r\n\r\n    }\r\n\r\n    onSubmit = async (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        const name = this.state.fields;\r\n        console.log(\"name : \", name);\r\n        const cardElement = this.props.elements.getElement('card');\r\n        /*\r\n        try {\r\n\r\n        this.props.stripe\r\n        .createPaymentMethod({\r\n                            type: 'card',\r\n                            card: cardElement,\r\n                        }).then(({paymentMethod}) => {\r\n        console.log('Received Stripe PaymentMethod:', paymentMethod);\r\n      });\r\n\r\n      let {token} = await this.props.stripe.createToken({type: 'card', name: name});\r\n\r\n      let amount = this.props.amount;\r\n\r\n      \r\n      sendPaymentInfos(token, amount);\r\n\r\n        }catch(err) {\r\n            throw err;\r\n        }\r\n        */\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app-form-payment-component\">\r\n                <form onSubmit={this.onSubmit}>\r\n                <div>\r\n                <label>name</label>\r\n                <input type=\"text\" className=\"credit-card-name\" value={this.state.name}  onChange={this.onTextFieldChange} />\r\n    \r\n                </div>\r\n                <div>\r\n                <label>CC Number -- Exp. Date -- CVC</label> \r\n                <CardElement className=\"card-element\" />\r\n                </div>\r\n                \r\n                <button className=\"\">Charge it !</button>\r\n            </form>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default injectStripe(FormPayment);"]},"metadata":{},"sourceType":"module"}