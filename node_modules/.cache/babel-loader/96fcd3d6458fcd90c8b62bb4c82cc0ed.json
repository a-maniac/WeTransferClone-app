{"ast":null,"code":"var _jsxFileName = \"C:\\\\we-transfer-clone\\\\app\\\\src\\\\components\\\\Content.js\";\nimport React, { Component } from 'react';\nimport NavBar from '../components/NavBar';\nimport LoginForm from '../components/LoginForm';\nimport Subscribe from '../components/Subscribe';\nimport About from '../components/About';\nimport Help from '../components/Help';\nimport Layout from '../layout/index';\nimport Checkout from '../components/Checkout';\nexport default class Content extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      onShow: false,\n      componentName: props.subComponentName\n    };\n  }\n\n  renderComponent() {\n    const {\n      componentName\n    } = this.state;\n    const {\n      onShow\n    } = this.state;\n\n    switch (componentName) {\n      case 'login':\n        return React.createElement(LoginForm, {\n          onShow: componentName => {\n            console.log('login');\n            this.setState({\n              onShow: true,\n              componentName: componentName\n            });\n          },\n          onClose: () => {\n            this.setState({\n              onShow: true,\n              componentName: 'NavBar'\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        });\n\n      case 'subscribe':\n        return React.createElement(Subscribe, {\n          onClose: () => {\n            this.setState({\n              onShow: true,\n              componentName: 'NavBar'\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        });\n\n      case 'help':\n        return React.createElement(Help, {\n          onClose: () => {\n            this.setState({\n              onShow: true,\n              componentName: 'NavBar'\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        });\n\n      case 'about':\n        return React.createElement(About, {\n          onClose: () => {\n            this.setState({\n              onShow: true,\n              componentName: 'NavBar'\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        });\n\n      case 'checkout':\n        return React.createElement(Checkout, {\n          onClose: () => {\n            this.setState({\n              onShow: true,\n              componentName: 'NavBar'\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        });\n\n      default:\n        return React.createElement(NavBar, {\n          onClose: () => {\n            this.setState({\n              onShow: false,\n              componentName: this.props.subComponentName\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"app-right-components\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"app-close-button\",\n      onClick: () => {\n        if (this.props.onClose) {\n          this.props.onClose();\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"x\"), this.renderComponent());\n  }\n\n}","map":{"version":3,"sources":["C:/we-transfer-clone/app/src/components/Content.js"],"names":["React","Component","NavBar","LoginForm","Subscribe","About","Help","Layout","Checkout","Content","constructor","props","state","onShow","componentName","subComponentName","renderComponent","console","log","setState","render","onClose"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport NavBar from '../components/NavBar';\r\nimport LoginForm from '../components/LoginForm';\r\nimport Subscribe from '../components/Subscribe';\r\nimport About from '../components/About';\r\nimport Help from '../components/Help';\r\nimport Layout from '../layout/index';\r\nimport Checkout from '../components/Checkout';\r\n\r\nexport default class Content extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            onShow : false,\r\n            componentName : props.subComponentName\r\n        }\r\n    }\r\n\r\n    renderComponent () {\r\n\r\n        const {componentName} = this.state;\r\n        const {onShow} = this.state;\r\n\r\n            switch(componentName) {\r\n\r\n                case 'login' : return (\r\n                        <LoginForm \r\n                            onShow = {(componentName) => {\r\n                                console.log('login')\r\n                                this.setState({\r\n                                    onShow : true,\r\n                                    componentName : componentName\r\n                                })\r\n                            }}\r\n                            onClose = {() => {\r\n                                this.setState({\r\n                                    onShow : true,\r\n                                    componentName : 'NavBar'\r\n                                    })\r\n                                }} \r\n                        />\r\n                 ) \r\n\r\n                case 'subscribe' : return (\r\n                        <Subscribe onClose = {() => {\r\n                             this.setState({\r\n                                onShow : true,\r\n                                componentName : 'NavBar'\r\n                                })\r\n                            }} />\r\n                 ) \r\n                \r\n                case 'help' : return (\r\n                    <Help onClose = {() => {\r\n                             this.setState({\r\n                                onShow : true,\r\n                                componentName : 'NavBar'\r\n                                })\r\n                            }} />\r\n                 ) \r\n\r\n                case 'about' : return (\r\n                    <About onClose = {() => {\r\n                             this.setState({\r\n                                onShow : true,\r\n                                componentName : 'NavBar'\r\n                                })\r\n                            }} />\r\n                 ) \r\n\r\n                case 'checkout' : return (\r\n                    <Checkout onClose = {() => {\r\n                             this.setState({\r\n                                onShow : true,\r\n                                componentName : 'NavBar'\r\n                                })\r\n                            }} />\r\n                ) \r\n\r\n                 default : \r\n                 return ( <NavBar onClose = {() => {\r\n                    this.setState({\r\n                        onShow : false,\r\n                        componentName : this.props.subComponentName\r\n                       })\r\n                   }}/>\r\n                 )\r\n            }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='app-right-components'>\r\n                <button className=\"app-close-button\" onClick={() => {\r\n                    if(this.props.onClose){\r\n                        this.props.onClose();\r\n                    }\r\n                }} >x</button>\r\n                {this.renderComponent()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}