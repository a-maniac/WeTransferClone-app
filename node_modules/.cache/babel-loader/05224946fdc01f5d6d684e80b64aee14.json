{"ast":null,"code":"var _jsxFileName = \"C:\\\\we-transfer-clone\\\\app\\\\src\\\\components\\\\SearchFilterCountry.js\";\nimport React, { Component } from 'react';\nexport default class SearchFilterCountry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      suggestions: []\n    };\n  }\n\n  onTextChanged(e) {\n    const value = e.target.value;\n\n    if (value.length === 0) {\n      this.setState({\n        suggestions: []\n      });\n    } else {\n      const regex = new RegExp(`^${value}`, 'i');\n      suggestions = this.items.sort().filter(v => regex.test(v));\n    }\n\n    this.setState(() => {\n      {\n        suggestions;\n      }\n    });\n  }\n\n  renderSuggestions() {\n    const {\n      suggestions\n    } = this.state;\n\n    if (suggestions.length === 0) {\n      return null;\n    }\n\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.suggestions.map(item => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, item)));\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.onTextChanged,\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.items.map(item => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, item))));\n  }\n\n}","map":{"version":3,"sources":["C:/we-transfer-clone/app/src/components/SearchFilterCountry.js"],"names":["React","Component","SearchFilterCountry","constructor","props","state","suggestions","onTextChanged","e","value","target","length","setState","regex","RegExp","items","sort","filter","v","test","renderSuggestions","map","item","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,mBAAN,SAAkCD,SAAlC,CAA4C;AAEzDE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACVC,MAAAA,WAAW,EAAG;AADJ,KAAb;AAGD;;AAEDC,EAAAA,aAAa,CAACC,CAAD,EAAI;AAEf,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;;AAEA,QAAGA,KAAK,CAACE,MAAN,KAAiB,CAApB,EAAsB;AAEpB,WAAKC,QAAL,CAAc;AACZN,QAAAA,WAAW,EAAG;AADF,OAAd;AAID,KAND,MAMO;AACL,YAAMO,KAAK,GAAG,IAAIC,MAAJ,CAAY,IAAGL,KAAM,EAArB,EAAwB,GAAxB,CAAd;AACAH,MAAAA,WAAW,GAAG,KAAKS,KAAL,CAAWC,IAAX,GAAkBC,MAAlB,CAAyBC,CAAC,IAAIL,KAAK,CAACM,IAAN,CAAWD,CAAX,CAA9B,CAAd;AACD;;AACD,SAAKN,QAAL,CAAc,MAAM;AAAC;AAACN,QAAAA,WAAW;AAAC;AAAC,KAAnC;AAED;;AAEDc,EAAAA,iBAAiB,GAAG;AAElB,UAAM;AAACd,MAAAA;AAAD,QAAgB,KAAKD,KAA3B;;AACA,QAAGC,WAAW,CAACK,MAAZ,KAAuB,CAA1B,EAA6B;AAE3B,aAAO,IAAP;AAED;;AACD,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKL,WAAL,CAAiBe,GAAjB,CAAsBC,IAAD,IAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAL,CAA/B,CADH,CADF;AAMD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAO,MAAA,QAAQ,EAAE,KAAKhB,aAAtB;AAAqC,MAAA,IAAI,EAAC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKQ,KAAL,CAAWM,GAAX,CAAgBC,IAAD,IAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAL,CAAzB,CADH,CAFD,CADF;AAQD;;AArDwD","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class SearchFilterCountry extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       suggestions : []\r\n    }\r\n  }\r\n\r\n  onTextChanged(e) {\r\n\r\n    const value = e.target.value;\r\n\r\n    if(value.length === 0){\r\n\r\n      this.setState({\r\n        suggestions : []\r\n      })\r\n\r\n    } else {\r\n      const regex = new RegExp(`^${value}`, 'i');\r\n      suggestions = this.items.sort().filter(v => regex.test(v));\r\n    }\r\n    this.setState(() => {{suggestions}});\r\n  \r\n  }\r\n  \r\n  renderSuggestions() {\r\n\r\n    const {suggestions} = this.state;\r\n    if(suggestions.length === 0) {\r\n\r\n      return null;\r\n\r\n    }\r\n    return (\r\n      <ul>\r\n        {this.suggestions.map((item) => <li>{item}</li>)}\r\n      </ul>\r\n    )\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n       <input onChange={this.onTextChanged} type=\"text\"  /> \r\n       <ul>\r\n         {this.items.map((item) => <li>{item}</li>)}\r\n       </ul>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}