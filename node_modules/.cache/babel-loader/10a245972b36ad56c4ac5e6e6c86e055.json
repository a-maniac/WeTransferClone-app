{"ast":null,"code":"var _jsxFileName = \"C:\\\\we-transfer-clone\\\\app\\\\src\\\\components\\\\SearchFilterCountry.js\";\nimport React, { Component } from 'react';\nimport countries from '../helpers/countries';\nexport default class SearchFilterCountry extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onTextChanged = e => {\n      const value = e.target.value;\n      let suggestions = [];\n\n      if (value > 0) {\n        const regex = new RegExp(`^${value}`, 'i');\n        suggestions = countries.sort().filter(v => regex.test(v));\n      }\n\n      this.setState(() => ({\n        suggestions\n      }));\n    };\n\n    this.state = {\n      suggestions: []\n    };\n  }\n\n  renderSuggestions() {\n    const {\n      suggestions\n    } = this.state;\n\n    if (suggestions.length === 0) {\n      return null;\n    } else {\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, this.suggestions.map(item => React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, item.name)));\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.onTextChanged,\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), this.renderSuggestions());\n  }\n\n}","map":{"version":3,"sources":["C:/we-transfer-clone/app/src/components/SearchFilterCountry.js"],"names":["React","Component","countries","SearchFilterCountry","constructor","props","onTextChanged","e","value","target","suggestions","regex","RegExp","sort","filter","v","test","setState","state","renderSuggestions","length","map","item","name","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AAEA,eAAe,MAAMC,mBAAN,SAAkCF,SAAlC,CAA4C;AAEzDG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,aARmB,GAQFC,CAAD,IAAO;AAErB,YAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AACA,UAAIE,WAAW,GAAG,EAAlB;;AACA,UAAGF,KAAK,GAAG,CAAX,EAAc;AACZ,cAAMG,KAAK,GAAG,IAAIC,MAAJ,CAAY,IAAGJ,KAAM,EAArB,EAAwB,GAAxB,CAAd;AACAE,QAAAA,WAAW,GAAGR,SAAS,CAACW,IAAV,GAAiBC,MAAjB,CAAwBC,CAAC,IAAIJ,KAAK,CAACK,IAAN,CAAWD,CAAX,CAA7B,CAAd;AACD;;AACC,WAAKE,QAAL,CAAc,OAAO;AAACP,QAAAA;AAAD,OAAP,CAAd;AACH,KAjBkB;;AAGjB,SAAKQ,KAAL,GAAa;AACVR,MAAAA,WAAW,EAAG;AADJ,KAAb;AAGD;;AAaDS,EAAAA,iBAAiB,GAAI;AACnB,UAAM;AAACT,MAAAA;AAAD,QAAgB,KAAKQ,KAA3B;;AACA,QAAGR,WAAW,CAACU,MAAZ,KAAuB,CAA1B,EAA6B;AAC3B,aAAO,IAAP;AACD,KAFD,MAGK;AACH,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKV,WAAL,CAAiBW,GAAjB,CAAsBC,IAAI,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,IAAI,CAACC,IAAV,CAA9B,CADH,CADF;AAKD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,QAAQ,EAAE,KAAKlB,aAAtB;AAAqC,MAAA,IAAI,EAAC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEK,KAAKa,iBAAL,EAFL,CADF;AAMD;;AA3CwD","sourcesContent":["import React, { Component } from 'react';\r\nimport countries from '../helpers/countries';\r\n\r\nexport default class SearchFilterCountry extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       suggestions : []\r\n    }\r\n  }\r\n  \r\n  onTextChanged = (e) => {\r\n\r\n    const value = e.target.value;\r\n    let suggestions = [];\r\n    if(value > 0) {\r\n      const regex = new RegExp(`^${value}`, 'i');\r\n      suggestions = countries.sort().filter(v => regex.test(v));\r\n    }\r\n      this.setState(() => ({suggestions}));\r\n  }\r\n\r\n  renderSuggestions () {\r\n    const {suggestions} = this.state;\r\n    if(suggestions.length === 0) {\r\n      return null;\r\n    }\r\n    else {\r\n      return (\r\n        <ul>\r\n          {this.suggestions.map( item => <li>{item.name}</li>) }\r\n        </ul> \r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n          <input onChange={this.onTextChanged} type='text' />\r\n          {this.renderSuggestions()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}