{"ast":null,"code":"var _jsxFileName = \"C:\\\\we-transfer-clone\\\\app\\\\src\\\\components\\\\SearchFilterCountry.js\";\nimport React, { Component } from 'react';\nexport default class SearchFilterCountry extends Component {\n  constructor(props) {\n    super(props);\n    this.items = ['Algeria', 'albania'];\n    this.state = {\n      suggestions: []\n    };\n  }\n\n  onTextChanged(e) {\n    const value = e.target.value;\n    let suggestions = [];\n\n    if (value.length > 0) {\n      const regex = new RegExp(`^${value}`, 'i');\n      suggestions = this.items.sort().filter(v => regex.test(v));\n    }\n\n    this.setState(() => ({\n      suggestions\n    }));\n  }\n\n  renderSuggestions() {\n    const {\n      suggestions\n    } = this.state;\n\n    if (suggestions.length === 0) {\n      return null;\n    }\n\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, suggestions.map(item => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, item)));\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.onTextChanged,\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), this.renderSuggestions());\n  }\n\n}","map":{"version":3,"sources":["C:/we-transfer-clone/app/src/components/SearchFilterCountry.js"],"names":["React","Component","SearchFilterCountry","constructor","props","items","state","suggestions","onTextChanged","e","value","target","length","regex","RegExp","sort","filter","v","test","setState","renderSuggestions","map","item","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,mBAAN,SAAkCD,SAAlC,CAA4C;AAEzDE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa,CAAC,SAAD,EAAY,SAAZ,CAAb;AAEA,SAAKC,KAAL,GAAa;AACVC,MAAAA,WAAW,EAAG;AADJ,KAAb;AAGD;;AAEDC,EAAAA,aAAa,CAACC,CAAD,EAAI;AAEf,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AACA,QAAIH,WAAW,GAAG,EAAlB;;AAEA,QAAGG,KAAK,CAACE,MAAN,GAAe,CAAlB,EAAoB;AAClB,YAAMC,KAAK,GAAG,IAAIC,MAAJ,CAAY,IAAGJ,KAAM,EAArB,EAAwB,GAAxB,CAAd;AACAH,MAAAA,WAAW,GAAG,KAAKF,KAAL,CAAWU,IAAX,GAAkBC,MAAlB,CAAyBC,CAAC,IAAIJ,KAAK,CAACK,IAAN,CAAWD,CAAX,CAA9B,CAAd;AACD;;AACC,SAAKE,QAAL,CAAe,OAAO;AAACZ,MAAAA;AAAD,KAAP,CAAf;AAEH;;AAEDa,EAAAA,iBAAiB,GAAG;AAElB,UAAM;AAACb,MAAAA;AAAD,QAAgB,KAAKD,KAA3B;;AACA,QAAGC,WAAW,CAACK,MAAZ,KAAuB,CAA1B,EAA6B;AAE3B,aAAO,IAAP;AAED;;AACD,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,WAAW,CAACc,GAAZ,CAAiBC,IAAD,IAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAL,CAA1B,CADH,CADF;AAMD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAO,MAAA,QAAQ,EAAE,KAAKf,aAAtB;AAAqC,MAAA,IAAI,EAAC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEE,KAAKY,iBAAL,EAFF,CADF;AAMD;;AAhDwD","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class SearchFilterCountry extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.items = ['Algeria', 'albania']\r\n  \r\n    this.state = {\r\n       suggestions : []\r\n    }\r\n  }\r\n\r\n  onTextChanged(e) {\r\n\r\n    const value = e.target.value;\r\n    let suggestions = [];\r\n\r\n    if(value.length > 0){\r\n      const regex = new RegExp(`^${value}`, 'i');\r\n      suggestions = this.items.sort().filter(v => regex.test(v));\r\n    }\r\n      this.setState( () => ({suggestions}));\r\n  \r\n  }\r\n  \r\n  renderSuggestions() {\r\n\r\n    const {suggestions} = this.state;\r\n    if(suggestions.length === 0) {\r\n\r\n      return null;\r\n\r\n    }\r\n    return (\r\n      <ul>\r\n        {suggestions.map((item) => <li>{item}</li>)}\r\n      </ul>\r\n    )\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n       <input onChange={this.onTextChanged} type=\"text\"  /> \r\n       {this.renderSuggestions()}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}