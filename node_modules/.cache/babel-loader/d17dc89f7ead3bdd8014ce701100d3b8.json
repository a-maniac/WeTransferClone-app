{"ast":null,"code":"import axios from 'axios';\nimport { apiURL } from '../config';\nimport _ from 'lodash';\nexport const upload = (form, callback = () => {}) => {\n  const url = `${apiURL}/upload`;\n\n  let files = _.get(form, 'files', []);\n\n  let pathsOfFiles = [];\n  console.log('files : ', files);\n  console.log('files.length : ', files.length);\n  console.log('pathsOfFiles.length : ', pathsOfFiles.length);\n  let data = new FormData();\n\n  _.each(files, file => {\n    data.append('files', file);\n    pathsOfFiles.push(file, 'webkitRelativePath');\n  });\n\n  _.each(pathsOfFiles, path => {\n    data.append('pathsOfFiles', path);\n  });\n\n  data.append('to', _.get(form, 'to'));\n  data.append('from', _.get(form, 'from'));\n  data.append('message', _.get(form, 'message'));\n  console.log('data from Upload component : ', data);\n  const config = {\n    onUploadProgress: event => {\n      console.log('UPLOAD EVENT from Upload.js ', event);\n      return callback({\n        type: 'onUploadProgress',\n        payload: event\n      });\n    }\n  };\n  console.log('files from Upload component : ', files);\n  axios.post(url, data, config).then(response => {\n    //upload success\n    return callback({\n      type: 'success',\n      payload: response.data //payload contains the data\n\n    });\n  }).catch(err => {\n    return callback({\n      type: 'error',\n      payload: err\n    });\n  });\n};","map":{"version":3,"sources":["C:/we-transfer-clone/app/src/helpers/Upload.js"],"names":["axios","apiURL","_","upload","form","callback","url","files","get","pathsOfFiles","console","log","length","data","FormData","each","file","append","push","path","config","onUploadProgress","event","type","payload","post","then","response","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAsB,WAAtB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAO,MAAMC,MAAM,GAAG,CAACC,IAAD,EAAOC,QAAQ,GAAG,MAAM,CAAE,CAA1B,KAA+B;AAEjD,QAAMC,GAAG,GAAI,GAAEL,MAAO,SAAtB;;AAEA,MAAIM,KAAK,GAAGL,CAAC,CAACM,GAAF,CAAMJ,IAAN,EAAY,OAAZ,EAAqB,EAArB,CAAZ;;AACA,MAAIK,YAAY,GAAG,EAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBJ,KAAxB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BJ,KAAK,CAACK,MAArC;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCF,YAAY,CAACG,MAAnD;AAEA,MAAIC,IAAI,GAAG,IAAIC,QAAJ,EAAX;;AAEAZ,EAAAA,CAAC,CAACa,IAAF,CAAOR,KAAP,EAAeS,IAAD,IAAU;AACpBH,IAAAA,IAAI,CAACI,MAAL,CAAY,OAAZ,EAAqBD,IAArB;AACAP,IAAAA,YAAY,CAACS,IAAb,CAAkBF,IAAlB,EAAwB,oBAAxB;AACH,GAHD;;AAKAd,EAAAA,CAAC,CAACa,IAAF,CAAON,YAAP,EAAsBU,IAAD,IAAU;AAC3BN,IAAAA,IAAI,CAACI,MAAL,CAAY,cAAZ,EAA4BE,IAA5B;AACH,GAFD;;AAIAN,EAAAA,IAAI,CAACI,MAAL,CAAY,IAAZ,EAAkBf,CAAC,CAACM,GAAF,CAAMJ,IAAN,EAAY,IAAZ,CAAlB;AACAS,EAAAA,IAAI,CAACI,MAAL,CAAY,MAAZ,EAAoBf,CAAC,CAACM,GAAF,CAAMJ,IAAN,EAAY,MAAZ,CAApB;AACAS,EAAAA,IAAI,CAACI,MAAL,CAAY,SAAZ,EAAuBf,CAAC,CAACM,GAAF,CAAMJ,IAAN,EAAY,SAAZ,CAAvB;AAEAM,EAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CE,IAA7C;AAEA,QAAMO,MAAM,GAAG;AAEXC,IAAAA,gBAAgB,EAAIC,KAAD,IAAW;AAE1BZ,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CW,KAA5C;AAEA,aAAOjB,QAAQ,CAAC;AACZkB,QAAAA,IAAI,EAAG,kBADK;AAEZC,QAAAA,OAAO,EAAGF;AAFE,OAAD,CAAf;AAIH;AAVU,GAAf;AAcAZ,EAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CJ,KAA9C;AAEAP,EAAAA,KAAK,CAACyB,IAAN,CAAWnB,GAAX,EAAgBO,IAAhB,EAAsBO,MAAtB,EAA8BM,IAA9B,CAAoCC,QAAD,IAAc;AAE7C;AACA,WAAOtB,QAAQ,CAAC;AACZkB,MAAAA,IAAI,EAAG,SADK;AAEZC,MAAAA,OAAO,EAAGG,QAAQ,CAACd,IAFP,CAEa;;AAFb,KAAD,CAAf;AAKH,GARD,EAQGe,KARH,CAQUC,GAAD,IAAS;AACd,WAAOxB,QAAQ,CAAC;AACZkB,MAAAA,IAAI,EAAG,OADK;AAEZC,MAAAA,OAAO,EAAGK;AAFE,KAAD,CAAf;AAIH,GAbD;AAcH,CA1DM","sourcesContent":["import axios from 'axios';\r\nimport  {apiURL} from '../config';\r\nimport _ from 'lodash';\r\n\r\nexport const upload = (form, callback = () => {}) => {\r\n\r\n    const url = `${apiURL}/upload`;\r\n\r\n    let files = _.get(form, 'files', []);\r\n    let pathsOfFiles = [];\r\n\r\n    console.log('files : ', files);\r\n    console.log('files.length : ', files.length);\r\n    console.log('pathsOfFiles.length : ', pathsOfFiles.length);\r\n\r\n    let data = new FormData();\r\n\r\n    _.each(files, (file) => {\r\n        data.append('files', file);\r\n        pathsOfFiles.push(file, 'webkitRelativePath')\r\n    });\r\n\r\n    _.each(pathsOfFiles, (path) => {\r\n        data.append('pathsOfFiles', path);\r\n    })\r\n  \r\n    data.append('to', _.get(form, 'to'));\r\n    data.append('from', _.get(form, 'from'));\r\n    data.append('message', _.get(form, 'message'));\r\n\r\n    console.log('data from Upload component : ', data);\r\n\r\n    const config = {\r\n\r\n        onUploadProgress : (event) => {\r\n\r\n            console.log('UPLOAD EVENT from Upload.js ', event);\r\n\r\n            return callback({\r\n                type : 'onUploadProgress',\r\n                payload : event\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    console.log('files from Upload component : ', files);\r\n\r\n    axios.post(url, data, config).then((response) => {\r\n\r\n        //upload success\r\n        return callback({\r\n            type : 'success',\r\n            payload : response.data  //payload contains the data\r\n        })\r\n\r\n    }).catch((err) => {\r\n        return callback({\r\n            type : 'error',\r\n            payload : err\r\n        })\r\n    });\r\n}"]},"metadata":{},"sourceType":"module"}