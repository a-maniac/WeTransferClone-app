{"ast":null,"code":"var _jsxFileName = \"C:\\\\we-transfer-clone\\\\app\\\\src\\\\components\\\\LoginForm.js\";\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport _ from 'lodash';\nimport { _isEmail } from '../helpers/email';\nimport { createUserAccount } from '../helpers/Users';\nexport default class LoginForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onTextFieldChange = e => {\n      let {\n        user\n      } = this.state;\n      const fieldName = e.target.name;\n      const fieldValue = e.target.value;\n      user[fieldName] = fieldValue;\n      this.setState({\n        user: user\n      });\n    };\n\n    this.formValidation = (fieldsToValidate = [], callback = () => {}) => {\n      const {\n        user\n      } = this.state;\n      const allFields = {\n        email: {\n          message: \"Your Email is required\",\n          func: () => {\n            const value = _.get(user, 'email', \"\");\n\n            if (value.length > 0 && _isEmail(value)) {\n              return true;\n            }\n\n            return false;\n          }\n        },\n        password: {\n          message: \"Your Password is required\",\n          func: () => {\n            const value = _.get(user, 'password', \"\");\n\n            if (value.length > 3) {\n              return true;\n            }\n\n            return false;\n          }\n        }\n      };\n      let errors = this.state.error;\n\n      _.each(fieldsToValidate, field => {\n        const fieldValidate = _.get(allFields, field);\n\n        if (fieldValidate) {\n          errors[field] = null;\n          const isFieldValid = fieldValidate.func();\n\n          if (!isFieldValid) {\n            errors[field] = _.get(fieldValidate, 'message');\n          }\n        }\n      });\n\n      this.setState({\n        error: errors\n      }, () => {\n        let isValid = true;\n\n        _.each(errors, err => {\n          if (err) {\n            isValid = false;\n            console.log('after process of validation form errors', errors);\n          }\n        });\n\n        callback(isValid);\n      });\n    };\n\n    this.onSubmit = event => {\n      event.preventDefault();\n      const fieldNeedToValidate = ['email', 'password'];\n      this.formValidation(fieldNeedToValidate, isValid => {\n        //SEND DATA TO BACKEND\n        if (isValid) {\n          //Send request to backend\n          createUserAccount(this.state.user).then(response => {\n            console.log('hey I got data after send post : ', response);\n          });\n        }\n\n        console.log('form Validated ', isValid);\n      });\n    };\n\n    this.state = {\n      user: {\n        email: \"\",\n        password: \"\"\n      },\n      error: {\n        email: null,\n        password: null\n      }\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onTextFieldChange = this.onTextFieldChange.bind(this);\n    this.formValidation = this.formValidation.bind(this);\n  }\n\n  render() {\n    const {\n      user,\n      error\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"app-login-form-inner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"form-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Sign In\"), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classNames('app-form-item', {\n        'error': _.get(error, 'email')\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"email-id\",\n      value: user.email,\n      onChange: this.onTextFieldChange,\n      type: \"email\",\n      placeholder: \"Enter your Email\",\n      name: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: classNames('app-form-item', {\n        'error': _.get(error, 'password')\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"password-id\",\n      value: user.password,\n      onChange: this.onTextFieldChange,\n      type: \"password\",\n      placeholder: \"Enter your Password\",\n      name: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"app-form-actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"app-button primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Login\"))), React.createElement(\"div\", {\n      className: \"app-form-forgotten-pass\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Forgot Password ?\")), React.createElement(\"div\", {\n      className: \"app-form-forgotten-pass\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => {\n        if (this.props.onShow) {\n          this.props.onShow('subscribe');\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"SIGN UP\")));\n  }\n\n}","map":{"version":3,"sources":["C:/we-transfer-clone/app/src/components/LoginForm.js"],"names":["React","Component","classNames","_","_isEmail","createUserAccount","LoginForm","constructor","props","onTextFieldChange","e","user","state","fieldName","target","name","fieldValue","value","setState","formValidation","fieldsToValidate","callback","allFields","email","message","func","get","length","password","errors","error","each","field","fieldValidate","isFieldValid","isValid","err","console","log","onSubmit","event","preventDefault","fieldNeedToValidate","then","response","bind","render","onShow"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,iBAAR,QAAgC,kBAAhC;AAEA,eAAe,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAE7CM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAmBnBC,iBAnBmB,GAmBEC,CAAD,IAAO;AAEvB,UAAI;AAACC,QAAAA;AAAD,UAAS,KAAKC,KAAlB;AAEA,YAAMC,SAAS,GAAGH,CAAC,CAACI,MAAF,CAASC,IAA3B;AACA,YAAMC,UAAU,GAAGN,CAAC,CAACI,MAAF,CAASG,KAA5B;AAEAN,MAAAA,IAAI,CAACE,SAAD,CAAJ,GAAkBG,UAAlB;AAEA,WAAKE,QAAL,CAAc;AACVP,QAAAA,IAAI,EAAGA;AADG,OAAd;AAIH,KAhCkB;;AAAA,SAkCnBQ,cAlCmB,GAkCF,CAACC,gBAAgB,GAAG,EAApB,EAAwBC,QAAQ,GAAG,MAAM,CAAE,CAA3C,KAAgD;AAE7D,YAAM;AAACV,QAAAA;AAAD,UAAS,KAAKC,KAApB;AAEA,YAAMU,SAAS,GAAG;AAEdC,QAAAA,KAAK,EAAI;AACLC,UAAAA,OAAO,EAAG,wBADL;AAELC,UAAAA,IAAI,EAAG,MAAM;AACT,kBAAMR,KAAK,GAAGd,CAAC,CAACuB,GAAF,CAAMf,IAAN,EAAY,OAAZ,EAAqB,EAArB,CAAd;;AACA,gBAAGM,KAAK,CAACU,MAAN,GAAe,CAAf,IAAoBvB,QAAQ,CAACa,KAAD,CAA/B,EAAwC;AACpC,qBAAO,IAAP;AACH;;AACD,mBAAO,KAAP;AACH;AARI,SAFK;AAadW,QAAAA,QAAQ,EAAI;AACRJ,UAAAA,OAAO,EAAG,2BADF;AAERC,UAAAA,IAAI,EAAG,MAAM;AACT,kBAAMR,KAAK,GAAGd,CAAC,CAACuB,GAAF,CAAMf,IAAN,EAAY,UAAZ,EAAwB,EAAxB,CAAd;;AACA,gBAAGM,KAAK,CAACU,MAAN,GAAe,CAAlB,EAAqB;AACjB,qBAAO,IAAP;AACH;;AACD,mBAAO,KAAP;AACH;AARO;AAbE,OAAlB;AA0BA,UAAIE,MAAM,GAAG,KAAKjB,KAAL,CAAWkB,KAAxB;;AAEA3B,MAAAA,CAAC,CAAC4B,IAAF,CAAOX,gBAAP,EAA0BY,KAAD,IAAW;AAEhC,cAAMC,aAAa,GAAG9B,CAAC,CAACuB,GAAF,CAAMJ,SAAN,EAAiBU,KAAjB,CAAtB;;AAEA,YAAGC,aAAH,EAAkB;AAEdJ,UAAAA,MAAM,CAACG,KAAD,CAAN,GAAgB,IAAhB;AAEA,gBAAME,YAAY,GAAGD,aAAa,CAACR,IAAd,EAArB;;AAEA,cAAG,CAACS,YAAJ,EAAkB;AACdL,YAAAA,MAAM,CAACG,KAAD,CAAN,GAAgB7B,CAAC,CAACuB,GAAF,CAAMO,aAAN,EAAqB,SAArB,CAAhB;AACH;AAEJ;AAEJ,OAhBD;;AAkBA,WAAKf,QAAL,CAAc;AACVY,QAAAA,KAAK,EAAGD;AADE,OAAd,EAEG,MAAM;AAEL,YAAIM,OAAO,GAAG,IAAd;;AAEAhC,QAAAA,CAAC,CAAC4B,IAAF,CAAOF,MAAP,EAAgBO,GAAD,IAAS;AAEpB,cAAGA,GAAH,EAAQ;AACJD,YAAAA,OAAO,GAAG,KAAV;AACAE,YAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ,EAAuDT,MAAvD;AACH;AAEJ,SAPD;;AASAR,QAAAA,QAAQ,CAACc,OAAD,CAAR;AACH,OAhBD;AAiBH,KArGkB;;AAAA,SAwGnBI,QAxGmB,GAwGPC,KAAD,IAAW;AAEdA,MAAAA,KAAK,CAACC,cAAN;AAEA,YAAMC,mBAAmB,GAAG,CAAC,OAAD,EAAU,UAAV,CAA5B;AAGA,WAAKvB,cAAL,CAAoBuB,mBAApB,EAA0CP,OAAD,IAAa;AAGlD;AACA,YAAGA,OAAH,EAAY;AAER;AACA9B,UAAAA,iBAAiB,CAAC,KAAKO,KAAL,CAAWD,IAAZ,CAAjB,CAAmCgC,IAAnC,CAAyCC,QAAD,IAAc;AAElDP,YAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ,EAAiDM,QAAjD;AAEH,WAJD;AAOH;;AAGDP,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAAgCH,OAAhC;AAEH,OAnBD;AAuBP,KAtIkB;;AAGf,SAAKvB,KAAL,GAAa;AACTD,MAAAA,IAAI,EAAG;AACHY,QAAAA,KAAK,EAAG,EADL;AAEHK,QAAAA,QAAQ,EAAG;AAFR,OADE;AAKTE,MAAAA,KAAK,EAAG;AACJP,QAAAA,KAAK,EAAG,IADJ;AAEJK,QAAAA,QAAQ,EAAG;AAFP;AALC,KAAb;AAWA,SAAKW,QAAL,GAAgB,KAAKA,QAAL,CAAcM,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKpC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBoC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAK1B,cAAL,GAAsB,KAAKA,cAAL,CAAoB0B,IAApB,CAAyB,IAAzB,CAAtB;AACH;;AAwHDC,EAAAA,MAAM,GAAG;AAEL,UAAM;AAACnC,MAAAA,IAAD;AAAOmB,MAAAA;AAAP,QAAgB,KAAKlB,KAA3B;AAEA,WAEQ;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAGI;AAAM,MAAA,QAAQ,EAAE,KAAK2B,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAErC,UAAU,CAAC,eAAD,EAAkB;AAAC,iBAAUC,CAAC,CAACuB,GAAF,CAAMI,KAAN,EAAa,OAAb;AAAX,OAAlB,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,EAAE,EAAC,UAAV;AAAqB,MAAA,KAAK,EAAEnB,IAAI,CAACY,KAAjC;AAAwC,MAAA,QAAQ,EAAE,KAAKd,iBAAvD;AAA0E,MAAA,IAAI,EAAC,OAA/E;AAAuF,MAAA,WAAW,EAAC,kBAAnG;AAAsH,MAAA,IAAI,EAAC,OAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAII;AAAK,MAAA,SAAS,EAAEP,UAAU,CAAC,eAAD,EAAkB;AAAC,iBAAUC,CAAC,CAACuB,GAAF,CAAMI,KAAN,EAAa,UAAb;AAAX,OAAlB,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,EAAE,EAAC,aAAV;AAAwB,MAAA,KAAK,EAAEnB,IAAI,CAACiB,QAApC;AAA8C,MAAA,QAAQ,EAAE,KAAKnB,iBAA7D;AAAgF,MAAA,IAAI,EAAC,UAArF;AAAgG,MAAA,WAAW,EAAC,qBAA5G;AAAkI,MAAA,IAAI,EAAC,UAAvI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,EAOI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CAPJ,CAHJ,EAeI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACY;AAAG,MAAA,IAAI,EAAC,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADZ,CAfJ,EAkBY;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,OAAO,EAAE,MAAM;AACnB,YAAG,KAAKD,KAAL,CAAWuC,MAAd,EAAsB;AAClB,eAAKvC,KAAL,CAAWuC,MAAX,CAAkB,WAAlB;AACH;AACJ,OAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CAlBZ,CAFR;AA6BH;;AA5K4C","sourcesContent":["import React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash';\r\nimport {_isEmail} from '../helpers/email';\r\nimport {createUserAccount} from '../helpers/Users';\r\n\r\nexport default class LoginForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            user : {\r\n                email : \"\",\r\n                password : \"\"\r\n            },\r\n            error : {\r\n                email : null,\r\n                password : null\r\n            }\r\n        }\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onTextFieldChange = this.onTextFieldChange.bind(this);\r\n        this.formValidation = this.formValidation.bind(this);\r\n    }\r\n\r\n    onTextFieldChange = (e) => {\r\n\r\n        let {user} = this.state;\r\n\r\n        const fieldName = e.target.name;\r\n        const fieldValue = e.target.value;\r\n\r\n        user[fieldName] = fieldValue;\r\n\r\n        this.setState({\r\n            user : user\r\n        })\r\n\r\n    }\r\n\r\n    formValidation = (fieldsToValidate = [], callback = () => {}) => {\r\n\r\n        const {user} = this.state;\r\n\r\n        const allFields = {\r\n\r\n            email :  {\r\n                message : \"Your Email is required\",\r\n                func : () => {\r\n                    const value = _.get(user, 'email', \"\");\r\n                    if(value.length > 0 && _isEmail(value)) {\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                }\r\n            },\r\n\r\n            password :  {\r\n                message : \"Your Password is required\",\r\n                func : () => {\r\n                    const value = _.get(user, 'password', \"\");\r\n                    if(value.length > 3) {\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        let errors = this.state.error;\r\n\r\n        _.each(fieldsToValidate, (field) => {\r\n\r\n            const fieldValidate = _.get(allFields, field);\r\n\r\n            if(fieldValidate) {\r\n\r\n                errors[field] = null;\r\n\r\n                const isFieldValid = fieldValidate.func();\r\n                \r\n                if(!isFieldValid) {\r\n                    errors[field] = _.get(fieldValidate, 'message');\r\n                }\r\n\r\n            }\r\n\r\n        })\r\n\r\n        this.setState({\r\n            error : errors\r\n        }, () => {\r\n\r\n            let isValid = true;\r\n\r\n            _.each(errors, (err) => {\r\n\r\n                if(err) {\r\n                    isValid = false;\r\n                    console.log('after process of validation form errors', errors);\r\n                }\r\n\r\n            })\r\n            \r\n            callback(isValid);\r\n        })\r\n    }\r\n\r\n\r\n    onSubmit = (event) => {\r\n\r\n            event.preventDefault();\r\n\r\n            const fieldNeedToValidate = ['email', 'password'];\r\n\r\n            \r\n            this.formValidation(fieldNeedToValidate, (isValid) => {\r\n\r\n\r\n                //SEND DATA TO BACKEND\r\n                if(isValid) {\r\n\r\n                    //Send request to backend\r\n                    createUserAccount(this.state.user).then((response) => {\r\n\r\n                        console.log('hey I got data after send post : ', response);\r\n\r\n                    })\r\n                    \r\n\r\n                }\r\n\r\n\r\n                console.log('form Validated ' , isValid);\r\n\r\n            })\r\n\r\n            \r\n\r\n    }\r\n    \r\n\r\n    render() {\r\n\r\n        const {user, error} = this.state;\r\n\r\n        return (\r\n        \r\n                <div className=\"app-login-form-inner\">\r\n                    <h2 className=\"form-title\">Sign In</h2>\r\n                    \r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className={classNames('app-form-item', {'error' : _.get(error, 'email')})}>\r\n                            <input id=\"email-id\" value={user.email} onChange={this.onTextFieldChange} type=\"email\" placeholder=\"Enter your Email\" name=\"email\" />\r\n                        </div>\r\n                        <div className={classNames('app-form-item', {'error' : _.get(error, 'password')})}>\r\n                            <input id=\"password-id\" value={user.password} onChange={this.onTextFieldChange} type=\"password\" placeholder=\"Enter your Password\" name=\"password\" />\r\n                        </div>\r\n                        <div className=\"app-form-actions\">\r\n                            <button className=\"app-button primary\">Login</button>\r\n                            \r\n                        </div>\r\n                    </form>\r\n                    <div className=\"app-form-forgotten-pass\">\r\n                                <a href=\"\">Forgot Password ?</a>\r\n                            </div>\r\n                            <div className=\"app-form-forgotten-pass\">\r\n                                <button onClick={() => {\r\n                                    if(this.props.onShow) {\r\n                                        this.props.onShow('subscribe');\r\n                                    }\r\n                                }} >SIGN UP</button>\r\n                            </div>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}