{"ast":null,"code":"import axios from 'axios';\nimport { apiURL } from '../config';\nimport Cookies from 'universal-cookie';\nexport const checkLoginStatus = () => {\n  const cookies = new Cookies();\n  const userId = cookies.get('userId');\n  const url = `${apiURL}/users/${userId}`;\n  const token = cookies.get('authorization');\n\n  if (token) {\n    return axios.get(url, {\n      headers: {\n        'authorization': token\n      }\n    }).then(response => {\n      console.log('reponse', response);\n      cookies.set('authorization', response.data.token.ops[0]._id, {\n        path: '/'\n      });\n    }).catch(err => {\n      console.log('error : ', err);\n    });\n  }\n};","map":{"version":3,"sources":["C:/we-transfer-clone/app/src/helpers/CheckLoginStatus.js"],"names":["axios","apiURL","Cookies","checkLoginStatus","cookies","userId","get","url","token","headers","then","response","console","log","set","data","ops","_id","path","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,WAArB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AAElC,QAAMC,OAAO,GAAG,IAAIF,OAAJ,EAAhB;AACA,QAAMG,MAAM,GAAGD,OAAO,CAACE,GAAR,CAAY,QAAZ,CAAf;AACA,QAAMC,GAAG,GAAI,GAAEN,MAAO,UAASI,MAAO,EAAtC;AAEA,QAAMG,KAAK,GAAGJ,OAAO,CAACE,GAAR,CAAY,eAAZ,CAAd;;AAEA,MAAGE,KAAH,EAAU;AAEN,WAAOR,KAAK,CAACM,GAAN,CAAUC,GAAV,EAAe;AAACE,MAAAA,OAAO,EAAG;AAAC,yBAAkBD;AAAnB;AAAX,KAAf,EAAsDE,IAAtD,CAA4DC,QAAD,IAAc;AAE5EC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,QAAvB;AACAP,MAAAA,OAAO,CAACU,GAAR,CAAY,eAAZ,EAA6BH,QAAQ,CAACI,IAAT,CAAcP,KAAd,CAAoBQ,GAApB,CAAwB,CAAxB,EAA2BC,GAAxD,EAA6D;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAA7D;AAEH,KALM,EAKJC,KALI,CAKEC,GAAG,IAAI;AACZR,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBO,GAAxB;AACH,KAPM,CAAP;AASH;AAIJ,CAvBM","sourcesContent":["import axios from 'axios';\r\nimport {apiURL} from '../config';\r\nimport Cookies from 'universal-cookie';\r\n\r\nexport const checkLoginStatus = () => {\r\n    \r\n    const cookies = new Cookies();\r\n    const userId = cookies.get('userId');\r\n    const url = `${apiURL}/users/${userId}`;\r\n    \r\n    const token = cookies.get('authorization');\r\n\r\n    if(token) {\r\n\r\n        return axios.get(url, {headers : {'authorization' : token}}).then((response) => {\r\n\r\n            console.log('reponse', response);\r\n            cookies.set('authorization', response.data.token.ops[0]._id, { path: '/' });\r\n\r\n        }).catch(err => {\r\n            console.log('error : ', err);\r\n        })\r\n\r\n    }\r\n\r\n    \r\n\r\n}"]},"metadata":{},"sourceType":"module"}